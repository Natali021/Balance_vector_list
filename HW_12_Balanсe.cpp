/**Розрахунок балансу
*Користувач вводе надходження та видатки(видатки зі знаком - )
*Вести окремо надходження та видатки
*Реалізувати дадавання надходження чи видатку
*Перегляд всіх надходженнь та видатків
*Контроль можливості внесення видатку(підрахунок балансу)
*Реалізувати на основі vector та list
*Реалізувати приклади в ООП стилі
** реалізувати введення не тільки суми а й призначення(текстовий рядок)
 */


#include <iostream>
#include <vector>
#include <list>
#include <string>
#include "BalanceV.h"
#include "BalanceL.h"
using namespace std;



int main()
{
    setlocale(0, "");
    BalanceV BV;
    BalanceL BL;

    cout << "Выберите пункт меню...\n";
    //выбор пользователя
    int ch = 0;
    do {

        cout << "\n---------Главное меню----------";
        cout << "\nВводим только суммы----------";
        cout << "\n\t1. Ввести приходы";
        cout << "\n\t2. Ввести расходы";
        cout << "\n\t3. Вывести на экран списки приходов и расходов";
        cout << "\n\t4. Вывести на экран сумму приходов, сумму расходов и баланс";
        cout << "\nВводим суммы и описание, отдельный баланс----------";
        cout << "\n\t5. Ввести приходы с описанием";
        cout << "\n\t6. Ввести расходы с описанием";
        cout << "\n\t7. Вывести на экран списки приходов и расходов с описанием";
        cout << "\n\t8. Вывести на экран сумму приходов, сумму расходов и баланс";

        cout << "\n";
        cin >> ch;
        //анализируем и вызываем соответствующую функцию
        switch (ch)
        {
        case 1: //Ввести приходы
            BV.setPozitiv();            
            
            break;
        case 2: //Ввести расходы
            BV.setNegativ();

            break;
        case 3: //Вывести на экран списки приходов и расходов
            cout << "\nСписок приходов:  ";
            BV.showPozitiv();
            cout << "\nСписок расходов:  ";
            BV.showNegativ();

            break;
        case 4:  //Вывести на экран сумму приходов, сумму расходов и баланс
            cout << "\nСумма всех приходов: ";
            cout<<BV.SumPozitiv();
            cout << "\nСумма всех расходов: ";
            cout << BV.SumNegativ();
            cout << "\nБаланс: ";
            cout << BV.ResBalance();

            break;
        case 5:  //Ввести приходы с описанием
            BL.setPozitivL();

            break;
        case 6:  //Ввести расходы с описанием
            BL.setNegativL();

            break;
        case 7:  //Вывести на экран списки приходов и расходов с описанием
            cout << "\nСписок приходов: \n ";
            BL.showPozitivL();
            cout << "\nСписок расходов: \n ";
            BL.showNegativL();

            break;
        case 8:  //Вывести на экран сумму приходов, сумму расходов и баланс
            cout << "\nСумма всех приходов: ";
            cout << BL.SumPozitivL();
            cout << "\nСумма всех расходов: ";
            cout << BL.SumNegativL();
            cout << "\nБаланс: ";
            cout << BL.ResBalanceL();

            break;
        
        }
    } while (ch != 0); //Выход из программы
    cout << "\n";
}

